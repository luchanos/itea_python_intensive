"""
2 урок: запрос информации с экрана
- приведение типов (5 мин)
- обзор функции input (2 мин)
- цикл for для обхода итерируемых объектов (8мин)
- форматирование строк / некоторые методы строк (10 мин)
- написание скрипта для запроса списка продуктов у пользователя (10 мин)

Домашнее задание: на основе прошлого домашнего задания доработать скрипт таким образом, чтобы запрашивать
у пользователя информацию о списке дел. Пример:
Введите дату: 01-01-2011
Введите дело, которое нужно не забыть: помыть посуду

После этого на экран должно быть выведено:
Список дел на  01-01-2011:
- сходить на тренировку
- помыть посуду
"""

# запрос информации с экрана
# print("Это сообщение на экране")
# data = input()
# data_from_screen = input("Введите информацию: ")

# тип принимаемых данных - строка
# print(data_from_screen, type(data_from_screen))

# сложение не получится, если предварительно не привести всё к числовом типу
# print(123 + int(data_from_screen))

# приведение числовых типов
# num = 1 + 2.1
# print(num, type(num))

# можно приводить разные типы
# print(bool([1, 2, 3]))
# print(list({1, 2, 3}))
# print(tuple({1, 1, 1, 2, 2, 3}))
# print(int(True))  # экзотика, лучше не использовать подобные вещи

# хорошо знакомые нам из 1го урока list tuple set dict
# l = [1, 2, 3, 4]
# t = (1, 2, 3, 4)
# s = {1, 2, 3, 4}
# d = {1: "orange",
#      2: "apple",
#      3: "pineapple"}

# for el in l:
#     print("Мы достали из l очередной элемент", el, "и можем делать с ним что захотим")
#     print("Например складывать его с единицей и получать в результате: ", el + 1)

# для словарей итерация происходит по ключам
# for el in d:
#     print(el)

# ещё немного про строки
# s1 = "превая строка"
# s2 = "вторая строка"
# s3 = s1 + s2
# print(s3)
#
# print(s1 + " " + s3)
# ""  # это пустая строка
# print("Строка с форматированием, где подставляем значения: p1 - %s, p2 - %s, p3 - %s" % (1, 2, 3))

# а вот тут буюет ошибка, потому что %d подразумевает подстановку числа
# print("Строка с форматированием, где подставляем значения: p1 - %s, p2 - %d, p3 - %s" % (1, '2', 3))

# другой похожий способ форматирования
# print("Строка с форматированием, где подставляем значения: p1 - {}, p2 - {}, p3 - {}".format(1, '2', 3))
# print("Строка с форматированием, где подставляем значения: p1 - {2}, p2 - {0}, p3 - {1}".format(1, '2', 3))

# форматирование с помощью f-строки
# a = 1
# b = 2
# c = 3
# print(f"Строка с форматированием, где подставляем значения: p1 - {a}, p2 - {b}, p3 - {c}")

# немного усовершенствуем предыдущий скрипт для сложения чисел в коллекции благодаря форматированию строк
# for el in l:
#     print(f"Мы достали из l очередной элемент {el} и можем делать с ним что захотим")
#     print(f"Например складывать его с единицей и получать в результате: {el + 1}")

# s = "soME sTrIng"
# print(s.lower())  # перевести всё в нижний регистр
# print(s.upper())  # перевести всё в верхний регистр
# print(s.capitalize())  # перевести первую букву в верхний регистр, а все остальные - в нижний
# print(s.count("s"))  # посчитать количество вхождений подстроки в строку

# вспомним наш словарь из первого урока
d_1 = {
    1: {
        "name": "orange",
        "manufacturer": "Romashka"
    },
    2: {
        "name": "orange",
        "manufacturer": "Solnyshko"
    },
    3: {
        "name": "pineapple",
        "manufacturer": "Zvezda"
    }
}

# объявляем пустой словарь
all_products = {}
answer = ""

# организуем цикл для запроса продуктов
while True:
    answer = input("Желаете ввести новый продукт? (для выхода из программы введите 'stop'): ")
    if answer == "stop":
        print("Программа завершается...")
        break

    # получаем id нового продукта
    while True:
        product_id = input("Введите id нового продукта: ")
        if product_id in all_products:
            print("Такой id уже есть в словаре! Введите другой!")
            continue
        break

    # запрашиваем название нового продукта
    while True:
        product_name = input("Введите название нового продукта: ")
        if product_name == "":
            print("Название продукта не может быть пустой строкой! Введите другое название!")
            continue
        break

    # запрашиваем производителя нового продукта
    while True:
        product_manufacturer = input("Введите производителя нового продукта: ")
        if product_manufacturer == "":
            print("Производитель продукта не может быть пустой строкой! Введите другого производителя!")
            continue
        break

    new_product = {
        "name": product_name,
        "manufacturer": product_manufacturer
    }
    all_products[product_id] = new_product

    print("Новый продукт добавлен! Теперь список продуктов выглядит вот так:\n\n")
    for el in all_products:
        print(el, ":", all_products[el])

print("Программа завершена!")
